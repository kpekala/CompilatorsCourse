
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "nonassocIFXnonassocELSEleft+-left*/leftDOTADDDOTMINUSleftDOTTIMESDOTDIVIDErightUMINUSASSIGNADD ASSIGNDIV ASSIGNMINUS ASSIGNMUL BREAK CONTINUE DOTADD DOTDIVIDE DOTMINUS DOTTIMES ELSE EQ EYE FLOATNUM FOR GE ID IF LE NEQ NUMBER ONES PRINT RETURN STR UMINUS WHILE ZEROSprogram : ins_optins_opt : ins ins : ins in\n             | inin : ';'in : '{' ins '}'in : ID '=' expr ';'\n                | ID ASSIGNADD expr ';'\n                | ID ASSIGNMINUS expr ';'\n                | ID ASSIGNMUL expr ';'\n                | ID ASSIGNDIV expr ';'expr : expr '+' expr\n            | expr '-' expr\n            | expr '*' expr\n            | expr '/' expr\n            | expr DOTADD expr\n            | expr DOTMINUS expr\n            | expr DOTTIMES expr\n            | expr DOTDIVIDE exprexpr : '-' expr %prec UMINUSexpr : FLOATNUM\n            | NUMBERexpr : IDexpr : STRexpr : '(' expr ')' expr : expr '\\''cond : expr '<' expr\n            | expr '>' expr\n            | expr LE expr\n            | expr GE expr\n            | expr EQ expr\n            | expr NEQ exprexpr : '[' lists ']'lists : list\n             | lists ',' listlist : '[' seq ']'seq : expr\n           | seq ',' exprfun : ZEROS\n           | EYE\n           | ONESexpr : fun '(' expr ')'in : WHILE '(' cond ')' inin : FOR ID '=' expr ':' expr inin : IF '(' cond ')' in %prec IFX\n            | IF '(' cond ')' in ELSE inin : BREAK ';'\n            | CONTINUE ';'\n            | RETURN expr ';'in : PRINT seq ';'in : ID list '=' expr"
    
_lr_action_items = {';':([0,3,4,5,6,11,12,15,16,27,28,29,31,32,33,34,41,42,43,44,45,46,47,48,55,64,65,70,72,73,74,75,76,77,79,87,88,89,90,91,92,93,94,95,96,97,100,101,109,111,112,113,114,115,],[5,5,-4,-5,5,27,28,-3,5,-47,-48,55,-21,-22,-23,-24,70,-37,-6,72,73,74,75,76,-49,-26,-20,-50,-7,-8,-9,-10,-11,-51,5,5,-12,-13,-14,-15,-16,-17,-18,-19,-25,-33,-38,-43,-45,-42,5,5,-44,-46,]),'{':([0,3,4,5,6,15,16,27,28,31,32,33,34,43,55,64,65,70,72,73,74,75,76,77,79,87,88,89,90,91,92,93,94,95,96,97,101,109,111,112,113,114,115,],[6,6,-4,-5,6,-3,6,-47,-48,-21,-22,-23,-24,-6,-49,-26,-20,-50,-7,-8,-9,-10,-11,-51,6,6,-12,-13,-14,-15,-16,-17,-18,-19,-25,-33,-43,-45,-42,6,6,-44,-46,]),'ID':([0,3,4,5,6,9,13,14,15,16,17,18,19,20,21,23,24,26,27,28,30,31,32,33,34,35,43,49,53,55,56,57,58,59,60,61,62,63,64,65,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,101,108,109,111,112,113,114,115,],[7,7,-4,-5,7,25,33,33,-3,7,33,33,33,33,33,33,33,33,-47,-48,33,-21,-22,-23,-24,33,-6,33,33,-49,33,33,33,33,33,33,33,33,-26,-20,33,-50,33,-7,-8,-9,-10,-11,-51,7,33,33,33,33,33,33,7,-12,-13,-14,-15,-16,-17,-18,-19,-25,-33,-43,33,-45,-42,7,7,-44,-46,]),'WHILE':([0,3,4,5,6,15,16,27,28,31,32,33,34,43,55,64,65,70,72,73,74,75,76,77,79,87,88,89,90,91,92,93,94,95,96,97,101,109,111,112,113,114,115,],[8,8,-4,-5,8,-3,8,-47,-48,-21,-22,-23,-24,-6,-49,-26,-20,-50,-7,-8,-9,-10,-11,-51,8,8,-12,-13,-14,-15,-16,-17,-18,-19,-25,-33,-43,-45,-42,8,8,-44,-46,]),'FOR':([0,3,4,5,6,15,16,27,28,31,32,33,34,43,55,64,65,70,72,73,74,75,76,77,79,87,88,89,90,91,92,93,94,95,96,97,101,109,111,112,113,114,115,],[9,9,-4,-5,9,-3,9,-47,-48,-21,-22,-23,-24,-6,-49,-26,-20,-50,-7,-8,-9,-10,-11,-51,9,9,-12,-13,-14,-15,-16,-17,-18,-19,-25,-33,-43,-45,-42,9,9,-44,-46,]),'IF':([0,3,4,5,6,15,16,27,28,31,32,33,34,43,55,64,65,70,72,73,74,75,76,77,79,87,88,89,90,91,92,93,94,95,96,97,101,109,111,112,113,114,115,],[10,10,-4,-5,10,-3,10,-47,-48,-21,-22,-23,-24,-6,-49,-26,-20,-50,-7,-8,-9,-10,-11,-51,10,10,-12,-13,-14,-15,-16,-17,-18,-19,-25,-33,-43,-45,-42,10,10,-44,-46,]),'BREAK':([0,3,4,5,6,15,16,27,28,31,32,33,34,43,55,64,65,70,72,73,74,75,76,77,79,87,88,89,90,91,92,93,94,95,96,97,101,109,111,112,113,114,115,],[11,11,-4,-5,11,-3,11,-47,-48,-21,-22,-23,-24,-6,-49,-26,-20,-50,-7,-8,-9,-10,-11,-51,11,11,-12,-13,-14,-15,-16,-17,-18,-19,-25,-33,-43,-45,-42,11,11,-44,-46,]),'CONTINUE':([0,3,4,5,6,15,16,27,28,31,32,33,34,43,55,64,65,70,72,73,74,75,76,77,79,87,88,89,90,91,92,93,94,95,96,97,101,109,111,112,113,114,115,],[12,12,-4,-5,12,-3,12,-47,-48,-21,-22,-23,-24,-6,-49,-26,-20,-50,-7,-8,-9,-10,-11,-51,12,12,-12,-13,-14,-15,-16,-17,-18,-19,-25,-33,-43,-45,-42,12,12,-44,-46,]),'RETURN':([0,3,4,5,6,15,16,27,28,31,32,33,34,43,55,64,65,70,72,73,74,75,76,77,79,87,88,89,90,91,92,93,94,95,96,97,101,109,111,112,113,114,115,],[13,13,-4,-5,13,-3,13,-47,-48,-21,-22,-23,-24,-6,-49,-26,-20,-50,-7,-8,-9,-10,-11,-51,13,13,-12,-13,-14,-15,-16,-17,-18,-19,-25,-33,-43,-45,-42,13,13,-44,-46,]),'PRINT':([0,3,4,5,6,15,16,27,28,31,32,33,34,43,55,64,65,70,72,73,74,75,76,77,79,87,88,89,90,91,92,93,94,95,96,97,101,109,111,112,113,114,115,],[14,14,-4,-5,14,-3,14,-47,-48,-21,-22,-23,-24,-6,-49,-26,-20,-50,-7,-8,-9,-10,-11,-51,14,14,-12,-13,-14,-15,-16,-17,-18,-19,-25,-33,-43,-45,-42,14,14,-44,-46,]),'$end':([1,2,3,4,5,15,27,28,31,32,33,34,43,55,64,65,70,72,73,74,75,76,77,88,89,90,91,92,93,94,95,96,97,101,109,111,114,115,],[0,-1,-2,-4,-5,-3,-47,-48,-21,-22,-23,-24,-6,-49,-26,-20,-50,-7,-8,-9,-10,-11,-51,-12,-13,-14,-15,-16,-17,-18,-19,-25,-33,-43,-45,-42,-44,-46,]),'}':([4,5,15,16,27,28,31,32,33,34,43,55,64,65,70,72,73,74,75,76,77,88,89,90,91,92,93,94,95,96,97,101,109,111,114,115,],[-4,-5,-3,43,-47,-48,-21,-22,-23,-24,-6,-49,-26,-20,-50,-7,-8,-9,-10,-11,-51,-12,-13,-14,-15,-16,-17,-18,-19,-25,-33,-43,-45,-42,-44,-46,]),'ELSE':([5,27,28,31,32,33,34,43,55,64,65,70,72,73,74,75,76,77,88,89,90,91,92,93,94,95,96,97,101,109,111,114,115,],[-5,-47,-48,-21,-22,-23,-24,-6,-49,-26,-20,-50,-7,-8,-9,-10,-11,-51,-12,-13,-14,-15,-16,-17,-18,-19,-25,-33,-43,113,-42,-44,-46,]),'=':([7,22,25,78,],[17,49,53,-36,]),'ASSIGNADD':([7,],[18,]),'ASSIGNMINUS':([7,],[19,]),'ASSIGNMUL':([7,],[20,]),'ASSIGNDIV':([7,],[21,]),'[':([7,13,14,17,18,19,20,21,23,24,26,30,35,36,49,53,56,57,58,59,60,61,62,63,69,71,80,81,82,83,84,85,98,108,],[23,36,36,36,36,36,36,36,36,36,36,36,36,23,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,23,36,]),'(':([8,10,13,14,17,18,19,20,21,23,24,26,30,35,37,38,39,40,49,53,56,57,58,59,60,61,62,63,69,71,80,81,82,83,84,85,108,],[24,26,35,35,35,35,35,35,35,35,35,35,35,35,69,-39,-40,-41,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'-':([13,14,17,18,19,20,21,23,24,26,29,30,31,32,33,34,35,42,44,45,46,47,48,49,52,53,56,57,58,59,60,61,62,63,64,65,66,69,71,77,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,99,100,102,103,104,105,106,107,108,111,112,],[30,30,30,30,30,30,30,30,30,30,57,30,-21,-22,-23,-24,30,57,57,57,57,57,57,30,57,30,30,30,30,30,30,30,30,30,-26,-20,57,30,30,57,30,30,30,30,30,30,57,-12,-13,-14,-15,-16,-17,-18,-19,-25,-33,57,57,57,57,57,57,57,57,30,-42,57,]),'FLOATNUM':([13,14,17,18,19,20,21,23,24,26,30,35,49,53,56,57,58,59,60,61,62,63,69,71,80,81,82,83,84,85,108,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'NUMBER':([13,14,17,18,19,20,21,23,24,26,30,35,49,53,56,57,58,59,60,61,62,63,69,71,80,81,82,83,84,85,108,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'STR':([13,14,17,18,19,20,21,23,24,26,30,35,49,53,56,57,58,59,60,61,62,63,69,71,80,81,82,83,84,85,108,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'ZEROS':([13,14,17,18,19,20,21,23,24,26,30,35,49,53,56,57,58,59,60,61,62,63,69,71,80,81,82,83,84,85,108,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'EYE':([13,14,17,18,19,20,21,23,24,26,30,35,49,53,56,57,58,59,60,61,62,63,69,71,80,81,82,83,84,85,108,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'ONES':([13,14,17,18,19,20,21,23,24,26,30,35,49,53,56,57,58,59,60,61,62,63,69,71,80,81,82,83,84,85,108,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'+':([29,31,32,33,34,42,44,45,46,47,48,52,64,65,66,77,86,88,89,90,91,92,93,94,95,96,97,99,100,102,103,104,105,106,107,111,112,],[56,-21,-22,-23,-24,56,56,56,56,56,56,56,-26,-20,56,56,56,-12,-13,-14,-15,-16,-17,-18,-19,-25,-33,56,56,56,56,56,56,56,56,-42,56,]),'*':([29,31,32,33,34,42,44,45,46,47,48,52,64,65,66,77,86,88,89,90,91,92,93,94,95,96,97,99,100,102,103,104,105,106,107,111,112,],[58,-21,-22,-23,-24,58,58,58,58,58,58,58,-26,-20,58,58,58,58,58,-14,-15,-16,-17,-18,-19,-25,-33,58,58,58,58,58,58,58,58,-42,58,]),'/':([29,31,32,33,34,42,44,45,46,47,48,52,64,65,66,77,86,88,89,90,91,92,93,94,95,96,97,99,100,102,103,104,105,106,107,111,112,],[59,-21,-22,-23,-24,59,59,59,59,59,59,59,-26,-20,59,59,59,59,59,-14,-15,-16,-17,-18,-19,-25,-33,59,59,59,59,59,59,59,59,-42,59,]),'DOTADD':([29,31,32,33,34,42,44,45,46,47,48,52,64,65,66,77,86,88,89,90,91,92,93,94,95,96,97,99,100,102,103,104,105,106,107,111,112,],[60,-21,-22,-23,-24,60,60,60,60,60,60,60,-26,-20,60,60,60,60,60,60,60,-16,-17,-18,-19,-25,-33,60,60,60,60,60,60,60,60,-42,60,]),'DOTMINUS':([29,31,32,33,34,42,44,45,46,47,48,52,64,65,66,77,86,88,89,90,91,92,93,94,95,96,97,99,100,102,103,104,105,106,107,111,112,],[61,-21,-22,-23,-24,61,61,61,61,61,61,61,-26,-20,61,61,61,61,61,61,61,-16,-17,-18,-19,-25,-33,61,61,61,61,61,61,61,61,-42,61,]),'DOTTIMES':([29,31,32,33,34,42,44,45,46,47,48,52,64,65,66,77,86,88,89,90,91,92,93,94,95,96,97,99,100,102,103,104,105,106,107,111,112,],[62,-21,-22,-23,-24,62,62,62,62,62,62,62,-26,-20,62,62,62,62,62,62,62,62,62,-18,-19,-25,-33,62,62,62,62,62,62,62,62,-42,62,]),'DOTDIVIDE':([29,31,32,33,34,42,44,45,46,47,48,52,64,65,66,77,86,88,89,90,91,92,93,94,95,96,97,99,100,102,103,104,105,106,107,111,112,],[63,-21,-22,-23,-24,63,63,63,63,63,63,63,-26,-20,63,63,63,63,63,63,63,63,63,-18,-19,-25,-33,63,63,63,63,63,63,63,63,-42,63,]),"'":([29,31,32,33,34,42,44,45,46,47,48,52,64,65,66,77,86,88,89,90,91,92,93,94,95,96,97,99,100,102,103,104,105,106,107,111,112,],[64,-21,-22,-23,-24,64,64,64,64,64,64,64,-26,-20,64,64,64,-12,-13,-14,-15,-16,-17,-18,-19,-25,-33,64,64,64,64,64,64,64,64,-42,64,]),',':([31,32,33,34,41,42,50,64,65,67,68,78,88,89,90,91,92,93,94,95,96,97,100,110,111,],[-21,-22,-23,-24,71,-37,71,-26,-20,98,-34,-36,-12,-13,-14,-15,-16,-17,-18,-19,-25,-33,-38,-35,-42,]),']':([31,32,33,34,42,50,64,65,67,68,78,88,89,90,91,92,93,94,95,96,97,100,110,111,],[-21,-22,-23,-24,-37,78,-26,-20,97,-34,-36,-12,-13,-14,-15,-16,-17,-18,-19,-25,-33,-38,-35,-42,]),'<':([31,32,33,34,52,64,65,88,89,90,91,92,93,94,95,96,97,111,],[-21,-22,-23,-24,80,-26,-20,-12,-13,-14,-15,-16,-17,-18,-19,-25,-33,-42,]),'>':([31,32,33,34,52,64,65,88,89,90,91,92,93,94,95,96,97,111,],[-21,-22,-23,-24,81,-26,-20,-12,-13,-14,-15,-16,-17,-18,-19,-25,-33,-42,]),'LE':([31,32,33,34,52,64,65,88,89,90,91,92,93,94,95,96,97,111,],[-21,-22,-23,-24,82,-26,-20,-12,-13,-14,-15,-16,-17,-18,-19,-25,-33,-42,]),'GE':([31,32,33,34,52,64,65,88,89,90,91,92,93,94,95,96,97,111,],[-21,-22,-23,-24,83,-26,-20,-12,-13,-14,-15,-16,-17,-18,-19,-25,-33,-42,]),'EQ':([31,32,33,34,52,64,65,88,89,90,91,92,93,94,95,96,97,111,],[-21,-22,-23,-24,84,-26,-20,-12,-13,-14,-15,-16,-17,-18,-19,-25,-33,-42,]),'NEQ':([31,32,33,34,52,64,65,88,89,90,91,92,93,94,95,96,97,111,],[-21,-22,-23,-24,85,-26,-20,-12,-13,-14,-15,-16,-17,-18,-19,-25,-33,-42,]),')':([31,32,33,34,51,54,64,65,66,88,89,90,91,92,93,94,95,96,97,99,102,103,104,105,106,107,111,],[-21,-22,-23,-24,79,87,-26,-20,96,-12,-13,-14,-15,-16,-17,-18,-19,-25,-33,111,-27,-28,-29,-30,-31,-32,-42,]),':':([31,32,33,34,64,65,86,88,89,90,91,92,93,94,95,96,97,111,],[-21,-22,-23,-24,-26,-20,108,-12,-13,-14,-15,-16,-17,-18,-19,-25,-33,-42,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'ins_opt':([0,],[2,]),'ins':([0,6,],[3,16,]),'in':([0,3,6,16,79,87,112,113,],[4,15,4,15,101,109,114,115,]),'list':([7,36,98,],[22,68,110,]),'expr':([13,14,17,18,19,20,21,23,24,26,30,35,49,53,56,57,58,59,60,61,62,63,69,71,80,81,82,83,84,85,108,],[29,42,44,45,46,47,48,42,52,52,65,66,77,86,88,89,90,91,92,93,94,95,99,100,102,103,104,105,106,107,112,]),'fun':([13,14,17,18,19,20,21,23,24,26,30,35,49,53,56,57,58,59,60,61,62,63,69,71,80,81,82,83,84,85,108,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'seq':([14,23,],[41,50,]),'cond':([24,26,],[51,54,]),'lists':([36,],[67,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> ins_opt','program',1,'p_program','Mparser.py',27),
  ('ins_opt -> ins','ins_opt',1,'p_ins_opt','Mparser.py',31),
  ('ins -> ins in','ins',2,'p_ins','Mparser.py',35),
  ('ins -> in','ins',1,'p_ins','Mparser.py',36),
  ('in -> ;','in',1,'p_in_empty','Mparser.py',40),
  ('in -> { ins }','in',3,'p_ins_group','Mparser.py',44),
  ('in -> ID = expr ;','in',4,'p_assign','Mparser.py',48),
  ('in -> ID ASSIGNADD expr ;','in',4,'p_assign','Mparser.py',49),
  ('in -> ID ASSIGNMINUS expr ;','in',4,'p_assign','Mparser.py',50),
  ('in -> ID ASSIGNMUL expr ;','in',4,'p_assign','Mparser.py',51),
  ('in -> ID ASSIGNDIV expr ;','in',4,'p_assign','Mparser.py',52),
  ('expr -> expr + expr','expr',3,'p_expr_binop','Mparser.py',56),
  ('expr -> expr - expr','expr',3,'p_expr_binop','Mparser.py',57),
  ('expr -> expr * expr','expr',3,'p_expr_binop','Mparser.py',58),
  ('expr -> expr / expr','expr',3,'p_expr_binop','Mparser.py',59),
  ('expr -> expr DOTADD expr','expr',3,'p_expr_binop','Mparser.py',60),
  ('expr -> expr DOTMINUS expr','expr',3,'p_expr_binop','Mparser.py',61),
  ('expr -> expr DOTTIMES expr','expr',3,'p_expr_binop','Mparser.py',62),
  ('expr -> expr DOTDIVIDE expr','expr',3,'p_expr_binop','Mparser.py',63),
  ('expr -> - expr','expr',2,'p_u_minus','Mparser.py',66),
  ('expr -> FLOATNUM','expr',1,'p_expr_lit','Mparser.py',70),
  ('expr -> NUMBER','expr',1,'p_expr_lit','Mparser.py',71),
  ('expr -> ID','expr',1,'p_expr_id','Mparser.py',75),
  ('expr -> STR','expr',1,'p_expr_str','Mparser.py',79),
  ('expr -> ( expr )','expr',3,'p_expr_grp','Mparser.py',83),
  ("expr -> expr '",'expr',2,'p_transpose','Mparser.py',87),
  ('cond -> expr < expr','cond',3,'p_cond','Mparser.py',91),
  ('cond -> expr > expr','cond',3,'p_cond','Mparser.py',92),
  ('cond -> expr LE expr','cond',3,'p_cond','Mparser.py',93),
  ('cond -> expr GE expr','cond',3,'p_cond','Mparser.py',94),
  ('cond -> expr EQ expr','cond',3,'p_cond','Mparser.py',95),
  ('cond -> expr NEQ expr','cond',3,'p_cond','Mparser.py',96),
  ('expr -> [ lists ]','expr',3,'p_literal_matrix','Mparser.py',100),
  ('lists -> list','lists',1,'p_lists','Mparser.py',104),
  ('lists -> lists , list','lists',3,'p_lists','Mparser.py',105),
  ('list -> [ seq ]','list',3,'p_list','Mparser.py',109),
  ('seq -> expr','seq',1,'p_seq','Mparser.py',113),
  ('seq -> seq , expr','seq',3,'p_seq','Mparser.py',114),
  ('fun -> ZEROS','fun',1,'p_fun','Mparser.py',118),
  ('fun -> EYE','fun',1,'p_fun','Mparser.py',119),
  ('fun -> ONES','fun',1,'p_fun','Mparser.py',120),
  ('expr -> fun ( expr )','expr',4,'p_funcall','Mparser.py',124),
  ('in -> WHILE ( cond ) in','in',5,'p_while','Mparser.py',128),
  ('in -> FOR ID = expr : expr in','in',7,'p_for','Mparser.py',132),
  ('in -> IF ( cond ) in','in',5,'p_if','Mparser.py',136),
  ('in -> IF ( cond ) in ELSE in','in',7,'p_if','Mparser.py',137),
  ('in -> BREAK ;','in',2,'p_control','Mparser.py',141),
  ('in -> CONTINUE ;','in',2,'p_control','Mparser.py',142),
  ('in -> RETURN expr ;','in',3,'p_control','Mparser.py',143),
  ('in -> PRINT seq ;','in',3,'p_print','Mparser.py',147),
  ('in -> ID list = expr','in',4,'p_access','Mparser.py',151),
]
